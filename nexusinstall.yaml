---
- name: Install Nexus Repository Manager
  hosts: nexus_server
  become: true  # To escalate privileges for tasks that require root access

  vars:
    nexus_version: "3.70.1-02"  # Replace with your desired Nexus version

  tasks:
    - name: Update the system
      apt:
        update_cache: yes
        upgrade: yes

    - name: Create nexus user
      user:
        name: nexus
        shell: /bin/bash
        create_home: yes

    - name: Download Nexus tarball
      get_url:
        url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
        dest: /tmp/nexus.tar.gz

    - name: Extract Nexus tarball
      become_user: nexus
      unarchive:
        src: /tmp/nexus.tar.gz
        dest: /opt
        creates: /opt/nexus-{{ nexus_version }}

    - name: Set ownership of Nexus files
      become_user: root
      file:
        path: "{{ item }}"
        owner: nexus
        group: nexus
        recurse: yes
      with_items:
        - /opt/nexus-{{ nexus_version }}
        - /opt/sonatype-work

    - name: Insert systemd service configuration for Nexus
      blockinfile:
        path: /etc/systemd/system/nexus.service
        block: |
          [Unit]
          Description=Nexus Repository Manager
          After=network.target

          [Service]
          Type=forking
          LimitNOFILE=65536
          ExecStart=/opt/nexus-{{ nexus_version }}/bin/nexus start
          ExecStop=/opt/nexus-{{ nexus_version }}/bin/nexus stop
          User=nexus
          Restart=on-abort

          [Install]
          WantedBy=multi-user.target
        create: yes  # Creates the file if it doesn't exist
        marker: "# {mark} ANSIBLE MANAGED BLOCK"

      notify:
        - Reload systemd

    - name: Enable and start Nexus service
      systemd:
        name: nexus
        enabled: yes
        state: started

    - name: Open port 8081 for Nexus
      firewalld:
        port: 8081/tcp
        state: enabled
        permanent: yes
        immediate: yes

    - name: Reload firewalld to apply changes
      command: firewall-cmd --reload

  handlers:
    - name: Reload systemd
      systemd:
        daemon_reload: yes
        name: nexus
        state: restarted
